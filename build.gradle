plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.1.6'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
    id 'com.epages.restdocs-api-spec' version '0.16.2'
    id 'org.hidetake.swagger.generator' version '2.19.2'
    id 'jacoco'
    id 'org.ec4j.editorconfig' version '0.0.3'
    id 'checkstyle'
    id 'org.springframework.boot' version '2.7.10'
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
    id 'org.jetbrains.kotlin.kapt' version '1.8.0'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.8.0'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.8.0'
    id 'org.jlleitschuh.gradle.ktlint' version '12.1.0'
}

checkstyle {
    maxWarnings = 0
    configFile = file("${rootDir}/config/naver-checkstyle-rules.xml")
    configProperties = ["suppressionFile": "${rootDir}/config/naver-checkstyle-suppressions.xml"]
    toolVersion = "8.42"
}

jacoco {
    toolVersion = "0.8.10"
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.asciidoctor.jvm.convert'
    apply plugin: 'com.epages.restdocs-api-spec'
    apply plugin: 'org.hidetake.swagger.generator'
    apply plugin: 'jacoco'
    apply plugin: 'org.ec4j.editorconfig'
    apply plugin: 'checkstyle'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.kapt'
    apply plugin: 'org.jetbrains.kotlin.plugin.spring'
    apply plugin: 'org.jetbrains.kotlin.plugin.jpa'
    apply plugin: 'org.jlleitschuh.gradle.ktlint'

    repositories {
        mavenCentral()
    }
    kapt {
        keepJavacAnnotationProcessors = true
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        runtimeOnly 'com.h2database:h2'
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
        testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.16.2'
        implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
        runtimeOnly 'com.mysql:mysql-connector-j'
        testImplementation 'io.findify:s3mock_2.13:0.2.6'
        implementation 'io.springfox:springfox-boot-starter:3.0.0'

        // 로그인 관련
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'software.amazon.awssdk:cognitoidentityprovider:2.20.66'
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
        implementation 'org.springframework.security:spring-security-oauth2-jose'
        implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

        // 캐싱 관련
        implementation 'org.springframework.boot:spring-boot-starter-cache'
        implementation 'com.github.ben-manes.caffeine:caffeine'

        // @mwiede의 포크 버전 jsch 추가
        implementation 'com.github.mwiede:jsch:0.2.21'

        kapt 'org.projectlombok:lombok'
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation "org.jetbrains.kotlin:kotlin-reflect:1.8.0"
        implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

    jacocoTestReport {
        dependsOn test
        reports {
            html.required = true
            xml.required = true
        }
    }

    jacocoTestCoverageVerification {
        violationRules {
            rule {
                enabled = true
                element = 'CLASS'
                limit {
                    counter = 'LINE'
                    value = 'COVEREDRATIO'
                }
                excludes = [
                        "com.server.computer_science.**.**",
                        "**.*Application*",
                        "**.*Config*",
                        "**/domain",
                        "**/*Interceptor*",
                        "**/*Exception*"
                ]
            }
        }
    }

    asciidoctor.doFirst {
        delete file('src/main/resources/static/docs')
    }

    bootJar {
        dependsOn asciidoctor
        copy {
            from "${asciidoctor.outputDir}"
            into 'BOOT-INF/classes/static/docs'
        }
        dependsOn 'openapi3'
    }
}

group = 'com.study.computer-science'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}
